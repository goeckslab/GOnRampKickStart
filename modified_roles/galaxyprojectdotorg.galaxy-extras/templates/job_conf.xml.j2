<?xml version="1.0"?>
{% import "macros.xml.j2" as macros with context %}
<job_conf>
    <plugins workers="2">
{% if galaxy_extras_config_slurm %}
        <plugin id="slurm" type="runner" load="galaxy.jobs.runners.slurm:SlurmJobRunner">
            <param id="drmaa_library_path">/usr/lib/slurm-drmaa/lib/libdrmaa.so</param>
{% if galaxy_minimum_version >= "17.09" %}
            <param id="enabled" from_environ="GALAXY_RUNNERS_ENABLE_SLURM">true</param>
{% endif %}
        </plugin>
{% endif %}

        <plugin id="local" type="runner" load="galaxy.jobs.runners.local:LocalJobRunner"/>
    </plugins>

    <!-- The default handler can be changed by specifying the GALAXY_HANDLERS_DEFAULT environment variable. -->
    <handlers default_from_environ="GALAXY_HANDLERS_DEFAULT" default="handlers">
{% if galaxy_handler_processes == 0 %}
        <handler id="web0" tags="handlers"/>
{% else %}
  {% for i in range(galaxy_handler_processes) %}
        <handler id="handler{{ i }}" tags="handlers"/>
  {% endfor %}
{% endif %}
    </handlers>

    <!-- The default destination can be changed by specifying the GALAXY_DESTINATIONS_DEFAULT environment variable. -->
    <destinations default_from_environ="GALAXY_DESTINATIONS_DEFAULT" default="{{ galaxy_extras_galaxy_destination_default }}">
        <destination id="docker_dispatch" runner="dynamic">
            <!-- Allow different default destinations based on whether the tool
                 supports Docker or not. -->
            <param id="type">docker_dispatch</param>
            <param id="docker_destination_id" from_environ="GALAXY_DESTINATIONS_DOCKER_DEFAULT">{{ galaxy_extras_galaxy_destination_docker_default }}</param>
            <param id="default_destination_id" from_environ="GALAXY_DESTINATIONS_NO_DOCKER_DEFAULT">{{ galaxy_extras_galaxy_destination_default }}</param>
        </destination>

        {% call macros.destination("local_no_container", "local") %}{% endcall %}
        {% call macros.destination("local_docker", "local", container_type="docker") %}{% endcall %}
        {% call macros.destination("local_force_docker", "local", container_type="docker", force_container=True) %}{% endcall %}

{% if galaxy_extras_config_slurm %}
        {% call macros.destination("slurm_cluster", "slurm") %}
            <param id="nativeSpecification" from_environ="NATIVE_SPEC">--ntasks={{ galaxy_extras_slurm_ntask }} --share</param>
            <param id="local_slots">8</param>
        {% endcall %}

        <!-- Docker -->
        {% call macros.destination("slurm_cluster_docker", "slurm", container_type="docker") %}
            <param id="nativeSpecification" from_environ="NATIVE_SPEC">--ntasks={{ galaxy_extras_slurm_ntask }} --share</param>
        {% endcall %}

        {% call macros.destination("slurm_cluster_force_docker", "slurm", container_type="docker", force_container=True) %}
            <param id="nativeSpecification" from_environ="NATIVE_SPEC">--ntasks={{ galaxy_extras_slurm_ntask }} --share</param>
        {% endcall %}

        <!-- Singularity -->
        {% call macros.destination("slurm_cluster_singularity", "slurm", container_type="singularity") %}
            <param id="nativeSpecification" from_environ="NATIVE_SPEC">--ntasks={{ galaxy_extras_slurm_ntask }} --share</param>
        {% endcall %}

{% endif %}
    </destinations>
    <limits>
    </limits>
</job_conf>
